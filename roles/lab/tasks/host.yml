- debug:
    msg: "Going to create host {{ item.name }} with a {{ item.disksize | default('10') }} disk image, {{ item.cpu | default('1') }} cpu(s) and {{ item.memory | default('2048') }} memory"

- name: check if {{ item.name }} is already defined
  virt:
    command: info
  register: lab_virt_info

- name: set the image to use
  set_fact:
    lab_host_image_src: "/var/lib/libvirt/images/{{ item.image | default(lab_default_image) }}"

- name: Create {{ item.name }}
  block:
  - name: check rhel images exists
    stat:
      path: "{{ lab_host_image_src }}"
    register: rhel_qcow

  - name: fail if RHEL qcow image does not exist
    fail:
      msg: "please download requested rhel image to {{ lab_host_image_src }}"
    when: not rhel_qcow.stat.exists

  - name: copy rhel image to image file
    copy:
      src: "{{ lab_host_image_src }}"
      dest: "/var/lib/libvirt/images/{{ item.name }}-vda.qcow2"
      remote_src: yes
      force: no

  - name: resize disk
    block:
    - name: resize disk to {{ item.disksize }}GB
      command: qemu-img resize "/var/lib/libvirt/images/{{ item.name }}-vda.qcow2"  "{{ item.disksize }}"

    - name: copy image to temporary image file
      copy:
        src: "/var/lib/libvirt/images/{{ item.name }}-vda.qcow2"
        dest: "/var/lib/libvirt/images/{{ item.name }}-vda.qcow2.temp"
        remote_src: yes
        force: no

    - name: resize the destination image file
      command: virt-resize --expand /dev/sda3 "/var/lib/libvirt/images/{{ item.name }}-vda.qcow2.temp" "/var/lib/libvirt/images/{{ item.name }}-vda.qcow2"

    - name: remove the temporary disk image
      file:
        path: "/var/lib/libvirt/images/{{ item.name }}-vda.qcow2.temp"
        state: absent
    when: item.disksize is defined

  - name: set root password and remove cloud init
    command: /usr/bin/virt-customize -a /var/lib/libvirt/images/{{ item.name }}-vda.qcow2 --root-password password:{{ vmpass }}  --uninstall cloud-init  --hostname {{ item.name }} --run-command 'mkdir -p /root/.ssh;chmod 700 /root/.ssh; touch /.autorelabel; echo {{ public_key }} > /root/.ssh/authorized_keys' # --copy-in /root/.ssh/authorized_keys:/root/.ssh

  - name: install {{ item.name }} with virt-install
    command: virt-install --name {{ item.name }} --memory {{ item.memory | default('2048') }} --vcpus {{ item.cpu | default('1') }} --disk /var/lib/libvirt/images/{{ item.name }}-vda.qcow2 --import --os-variant rhel8.1 --noautoconsole --network "network={{ item.network }},mac={{ item.macaddr }}"

  when: item.name not in lab_virt_info

- include_tasks: inventory.yml
